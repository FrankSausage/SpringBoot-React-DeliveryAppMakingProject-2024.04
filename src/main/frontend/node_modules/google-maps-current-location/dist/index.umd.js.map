{"version":3,"file":"index.umd.js","sources":["../src/LocationButton.ts","../src/LocationMarker.ts","../src/index.ts"],"sourcesContent":["import {ButtonStyle} from './types';\n\ntype Options = {\n  buttonStyle?: ButtonStyle;\n}\n\nexport default class LocationButton {\n  map: google.maps.Map;\n  options: Options;\n  controlUI: HTMLButtonElement;\n  controlInnerSymbol: HTMLDivElement;\n\n  constructor(map: google.maps.Map, options: Options) {\n    this.map = map;\n    this.options = options;\n\n    const {buttonStyle} = options;\n    const translateSymbol = 'translateY(-50%) translateX(-50%)';\n\n    const controlDiv = document.createElement('div');\n    controlDiv.style.margin = buttonStyle?.mainMargin ?? '10px';\n\n    this.controlUI = document.createElement('button');\n    this.controlUI.style.backgroundColor = buttonStyle?.backgroundColor ?? '#fff';\n    this.controlUI.style.border = buttonStyle?.border ?? 'none';\n    this.controlUI.style.borderRadius = buttonStyle?.borderRadius ?? '0px';\n    this.controlUI.style.outline = buttonStyle?.outline ?? 'none';\n    this.controlUI.style.width = buttonStyle?.height ?? '40px';\n    this.controlUI.style.height = buttonStyle?.height ?? '40px';\n    this.controlUI.style.boxShadow = buttonStyle?.boxShadow ?? '0 1px 4px rgba(0,0,0,0.3)';\n    this.controlUI.style.cursor = buttonStyle?.cursor ?? 'pointer';\n    this.controlUI.style.padding = '0px';\n    this.controlUI.style.display = 'flex';\n    this.controlUI.title = 'Your Location';\n    controlDiv.appendChild(this.controlUI);\n\n    const controlOutterSymbol = document.createElement('img');\n    // eslint-disable-next-line max-len\n    controlOutterSymbol.src = `data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%2224px%22%20viewBox%3D%220%200%2024%2024%22%20width%3D%2224px%22%20fill%3D%22%23${buttonStyle?.symbolColor?.replace('#', '') ?? '6F6F6F'}%22%3E%3Cpath%20d%3D%22M0%200h24v24H0z%22%20fill%3D%22none%22%2F%3E%3Cpath%20d%3D%22M20.94%2011c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83%203.52%203.52%206.83%203.06%2011H1v2h2.06c.46%204.17%203.77%207.48%207.94%207.94V23h2v-2.06c4.17-.46%207.48-3.77%207.94-7.94H23v-2h-2.06zM12%2019c-3.87%200-7-3.13-7-7s3.13-7%207-7%207%203.13%207%207-3.13%207-7%207z%22%2F%3E%3C%2Fsvg%3E`;\n    controlOutterSymbol.style.height = '75%';\n    controlOutterSymbol.style.position = 'absolute';\n    controlOutterSymbol.style.top = '50%';\n    controlOutterSymbol.style.left = '50%';\n    controlOutterSymbol.style.transform = translateSymbol;\n    this.controlUI.appendChild(controlOutterSymbol);\n\n    this.controlInnerSymbol = document.createElement('div');\n    this.controlInnerSymbol.style.backgroundColor = buttonStyle?.symbolColor ?? '#6F6F6F';\n    this.controlInnerSymbol.style.height = '35%';\n    this.controlInnerSymbol.style.width = '35%';\n    this.controlInnerSymbol.style.borderRadius = '50%';\n    this.controlInnerSymbol.style.position = 'absolute';\n    this.controlInnerSymbol.style.top = '50%';\n    this.controlInnerSymbol.style.left = '50%';\n    this.controlInnerSymbol.style.transform = translateSymbol;\n\n    this.controlUI.appendChild(this.controlInnerSymbol);\n\n    if (buttonStyle?.buttonPosition) {\n      map.controls[buttonStyle?.buttonPosition].push(controlDiv);\n    } else {\n      map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(controlDiv);\n    }\n  }\n\n  setEnabled(enable = true): void {\n    this.controlUI.disabled = !enable;\n  }\n\n  /**\n   * Starts/stops pulsing animation\n   * @param enable If true, the animation starts\n   */\n  animate(enable: boolean): void {\n    if (enable) {\n      this.controlInnerSymbol.animate([\n        {\n          opacity: '1',\n        },\n        {\n          opacity: '0',\n        },\n        {\n          opacity: '1',\n        },\n      ], {\n        duration: 1000,\n        iterations: Infinity,\n      });\n    } else {\n      const animations = this.controlInnerSymbol.getAnimations();\n      if (animations.length > 0 && animations[0].playState === 'running') {\n        animations[0].cancel();\n      }\n    }\n  }\n\n  setOnClickListener(cb: (this: GlobalEventHandlers, ev: MouseEvent) => void): void {\n    this.controlUI.onclick = cb;\n  }\n}\n","import {MarkerStyle} from './types';\n\nconst MARKER_DEFAULT_COLOR = '#4A89F3';\n\ntype Options = {\n  /**\n   * Use a custom style for the marker\n   */\n  markerStyle?: MarkerStyle,\n  /**\n   * If true, a shape that grows with position accuracy is showed\n   */\n  showAccuracyRadius?: boolean\n}\n\nexport default class LocationMarker {\n  map: google.maps.Map;\n  options: Options;\n  innerCircle: google.maps.Marker;\n  outerCircle: google.maps.Circle;\n\n  constructor(map: google.maps.Map, options: Options = {}) {\n    this.map = map;\n    this.options = options;\n\n    const {markerStyle} = options;\n\n    this.innerCircle = new google.maps.Marker({\n      map,\n      'clickable': markerStyle?.clickable ?? false,\n      'cursor': markerStyle?.cursor ?? 'pointer',\n      'draggable': markerStyle?.draggable ?? false,\n      'icon': {\n        'path': google.maps.SymbolPath.CIRCLE,\n        'fillColor': markerStyle?.fillColor ?? MARKER_DEFAULT_COLOR,\n        'fillOpacity': 1,\n        'scale': markerStyle?.scale ?? 6,\n        'strokeWeight': markerStyle?.strokeWeight ?? 2,\n        'strokeColor': markerStyle?.strokeColor ?? 'white',\n      },\n      'optimized': false,\n      'zIndex': 3,\n    });\n\n    this.outerCircle = new google.maps.Circle({\n      map,\n      fillColor: options.markerStyle?.fillColor ?? MARKER_DEFAULT_COLOR,\n      fillOpacity: 0.1,\n      strokeWeight: 0,\n    });\n    this.outerCircle.bindTo('center', this.innerCircle, 'position');\n  }\n\n  /**\n   * Updates marker position in the map.\n   * @param pos Marker position\n   * @param moveToCenter If true, the map is centered on the marker positions\n   */\n  update(pos: GeolocationPosition, moveToCenter = false): void {\n    const latLng = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);\n\n    this.innerCircle.setPosition(latLng);\n    if (!this.options.showAccuracyRadius) {\n      this.outerCircle.setCenter(latLng);\n      this.outerCircle.setRadius(pos.coords.accuracy);\n    }\n\n    if (moveToCenter) {\n      this.map.setCenter(new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude));\n    }\n  }\n\n  /**\n   * Centers map on current marker position\n   */\n  center():void {\n    const pos = this.innerCircle.getPosition();\n    if (pos) {\n      this.map.setCenter(pos);\n    }\n  }\n}\n\n","import LocationButton from './LocationButton';\nimport LocationMarker from './LocationMarker';\nimport {ButtonStyle, MarkerStyle} from './types';\n\ntype WatchPositionFnType = (successCallback: PositionCallback,\n  errorCallback?: PositionErrorCallback | null, options?: PositionOptions) => number | Promise<number | string>\n\nexport type Options = {\n  buttonStyle?: ButtonStyle,\n  markerStyle?: MarkerStyle,\n  showAccuracyRadius?: boolean,\n  watchPositionFn?: WatchPositionFnType,\n}\n\n/**\n* Adds a button to the toolbar for user to click and see their current position\n* on the map with a marker.\n*/\nclass CurrentLocation {\n  controlUI: LocationButton;\n  locationMarker: LocationMarker;\n  map: google.maps.Map;\n  positionCount: number;\n  positionOptions: PositionOptions;\n  watchId?: number | string;\n  watchPositionFn: WatchPositionFnType;\n\n  constructor(map: google.maps.Map, options: Options = {}) {\n    this.map = map;\n\n    this.positionOptions = {\n      enableHighAccuracy: true,\n    };\n\n    this.locationMarker = new LocationMarker(map, options);\n    this.controlUI = new LocationButton(map, options);\n\n    this.positionCount = 0;\n    this.watchId = 0;\n\n    const defaultWatchPositionFn = (successCallback: PositionCallback,\n        errorCallback?: PositionErrorCallback | null, options?: PositionOptions): number => {\n      return navigator.geolocation.watchPosition(successCallback, errorCallback, options);\n    };\n\n    this.watchPositionFn = options.watchPositionFn || defaultWatchPositionFn;\n\n    this.controlUI.setOnClickListener(() => {\n      if (!this.watchId) {\n        this.controlUI.setEnabled(false);\n        this.controlUI.animate(true);\n\n        this.startWatchPosition();\n      } else {\n        this.locationMarker.center();\n      }\n    });\n  }\n\n  /**\n   * Starts watching for the user position.\n   * This will be called automatically each time the position changes.\n   * */\n  startWatchPosition(): void {\n    const id = this.watchPositionFn((pos) => {\n      this.updatePosition(pos);\n    }, (err: GeolocationPositionError) => {\n      this.setError(err);\n    }, this.positionOptions);\n\n    if (id instanceof Promise) {\n      id.then((id)=> this.watchId = id);\n    } else {\n      this.watchId = id;\n    }\n  }\n\n  /**\n   * Everytime the position changes, the location of the marker also changes\n   * as well as some ControlUI settings\n   * */\n  updatePosition(pos: GeolocationPosition): void {\n    this.locationMarker.update(pos, ++this.positionCount === 1);\n    this.controlUI.setEnabled(true);\n    this.controlUI.animate(false);\n  }\n\n  /**\n   * When an error occurs during the watchPosition (e.g. PERMISSION_DENIED) an alert is showed,\n   * the watchId is set to undefined (to allow a re-watching) and the ControlUI settings are set to default\n   * */\n  setError(err: GeolocationPositionError): void {\n    this.watchId = undefined;\n    this.controlUI.setEnabled(true);\n    this.controlUI.animate(false);\n    alert(err.message);\n  }\n}\n\nexport default function(map: google.maps.Map, options: Options = {}): CurrentLocation {\n  return new CurrentLocation(map, options);\n}\n"],"names":["LocationButton","map","options","controlUI","controlInnerSymbol","this","buttonStyle","translateSymbol","controlDiv","document","createElement","style","margin","mainMargin","backgroundColor","border","borderRadius","outline","width","height","boxShadow","cursor","padding","display","title","appendChild","controlOutterSymbol","src","symbolColor","_buttonStyle$symbolCo2","replace","position","top","left","transform","buttonPosition","controls","push","google","maps","ControlPosition","RIGHT_BOTTOM","setEnabled","enable","disabled","animate","opacity","duration","iterations","Infinity","animations","getAnimations","length","playState","cancel","setOnClickListener","cb","onclick","MARKER_DEFAULT_COLOR","LocationMarker","innerCircle","outerCircle","markerStyle","Marker","clickable","draggable","icon","path","SymbolPath","CIRCLE","fillColor","fillOpacity","scale","strokeWeight","strokeColor","optimized","zIndex","Circle","_options$markerStyle","bindTo","update","pos","moveToCenter","latLng","LatLng","coords","latitude","longitude","setPosition","showAccuracyRadius","setCenter","setRadius","accuracy","center","getPosition","CurrentLocation","locationMarker","positionCount","positionOptions","watchId","watchPositionFn","enableHighAccuracy","successCallback","errorCallback","navigator","geolocation","watchPosition","_this","startWatchPosition","id","_this2","updatePosition","err","setError","Promise","then","undefined","alert","message"],"mappings":"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"}