{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/store_locator/interfaces.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAMH,kDAAkD;AAClD,iCAAiC;AACjC,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,QAAQ,EAAE,UAAU;IACpB,YAAY,EAAE,cAAc;IAC5B,KAAK,EAAE,OAAO;CACN,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {LatLng, LatLngLiteral, PlaceResult} from '../utils/googlemaps_types.js';\n\ntype ValuesOf<T> = T[keyof T];\n\n/** Capabilities for a Store Locator component. */\n// @ts-ignore:enforce-name-casing\nexport const FeatureSet = {\n  ADVANCED: 'advanced',\n  INTERMEDIATE: 'intermediate',\n  BASIC: 'basic'\n} as const;\nexport type FeatureSet = ValuesOf<typeof FeatureSet>;\n\n/**\n * Defines an individual location (store, business, etc) to be displayed in\n * `<gmpx-store-locator>`.\n */\nexport declare interface StoreLocatorListing {\n  /** Name of the location or store */\n  title: string;\n\n  /** Address lines, used when displaying the list. */\n  addressLines?: string[];\n\n  /** Geographic coordinates of the location */\n  position: LatLng|LatLngLiteral;\n\n  /** Place ID for this location, used to retrieve additional details */\n  placeId?: string;\n\n  /** Optional list of additional actions to display with each location */\n  actions?: StoreLocatorAction[];\n}\n\n/** Defines an action button for a `StoreLocatorListing`. */\nexport declare interface StoreLocatorAction {\n  /** Button label for this action */\n  label: string;\n\n  /**\n   * URI that will be opened in a new tab. If unspecified, it is\n   * up to the client code to implement behavior on click.\n   */\n  defaultUri?: string;\n}\n\n/**\n * Internal data structure to augment a `StoreLocatorListing` with additional\n * information.\n */\nexport interface InternalListing extends StoreLocatorListing {\n  /** Key for Lit to use when identifying a listing element. */\n  uniqueKey: string;\n\n  /**\n   * Listing expressed as a `google.maps.PlaceResult`, used with the Place\n   * Data Provider.\n   */\n  placeResult: PlaceResult;\n\n  /** Reference to the `<li>` DOM element for this listing in the left panel. */\n  listingElement?: Element;\n}\n\n/** A single action button as represented in Quick Builder Locator Plus. */\nexport declare interface QuickBuilderAction {\n  label?: string;\n  defaultUrl?: string;\n}\n\n/** A single listing as represented in Quick Builder Locator Plus. */\nexport declare interface QuickBuilderLocation {\n  title?: string;\n  address1?: string;\n  address2?: string;\n  coords?: LatLngLiteral;\n  placeId?: string;\n  actions?: QuickBuilderAction[];\n}\n\n/** Capabilities schema used by Quick Builder Locator Plus. */\nexport declare interface QuickBuilderCapabilities {\n  input?: boolean;\n  autocomplete?: boolean;\n  directions?: boolean;\n  distanceMatrix?: boolean;\n  details?: boolean;\n  actions?: boolean;\n}\n\n/** Configuration schema used by Quick Builder Locator Plus. */\nexport declare interface QuickBuilderConfiguration {\n  locations?: QuickBuilderLocation[];\n  mapOptions?: Partial<google.maps.MapOptions>;\n  mapsApiKey?: string;\n  capabilities?: QuickBuilderCapabilities;\n}\n"]}