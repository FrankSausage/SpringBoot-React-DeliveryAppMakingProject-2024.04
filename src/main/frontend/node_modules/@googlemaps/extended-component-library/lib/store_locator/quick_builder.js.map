{"version":3,"file":"quick_builder.js","sourceRoot":"","sources":["../../src/store_locator/quick_builder.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAGH,OAAO,EAAC,UAAU,EAAC,MAAM,iBAAiB,CAAC;AAE3C,oEAAoE;AACpE,MAAM,UAAU,gBAAgB,CAAC,aAAwC;IAEvE,SAAS,aAAa,CAAC,MAA0B;QAC/C,OAAO,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,UAAU,EAAC,CAAC;IACpE,CAAC;IAED,MAAM,UAAU,GACZ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACb,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,EAAE;QAC3B,YAAY,EACR,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,EAAE,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;QACtE,QAAQ,EAAE,QAAQ,CAAC,MAAM,IAAI,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC;QAC7C,OAAO,EAAE,QAAQ,CAAC,OAAO;QACzB,OAAO,EAAE,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;KACrD,CAAC,CAAC;IAEP,OAAO,CAAC,aAAa,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACzD,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,aAAa,CAAC,aAAwC;IAEpE,IAAI,aAAa,CAAC,YAAY,EAAE,UAAU,EAAE;QAC1C,OAAO,UAAU,CAAC,QAAQ,CAAC;KAC5B;SAAM,IAAI,aAAa,CAAC,YAAY,EAAE,KAAK,EAAE;QAC5C,OAAO,UAAU,CAAC,YAAY,CAAC;KAChC;SAAM;QACL,OAAO,UAAU,CAAC,KAAK,CAAC;KACzB;AACH,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,aAAa,CAAC,aAAwC;IAEpE,MAAM,OAAO,GAAG,EAAC,GAAG,CAAC,aAAa,CAAC,UAAU,IAAI,EAAE,CAAC,EAAC,CAAC;IACtD,IAAI,CAAC,OAAO,CAAC,KAAK;QAAE,OAAO,OAAO,CAAC,KAAK,CAAC;IACzC,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {QuickBuilderAction, QuickBuilderConfiguration, QuickBuilderLocation, StoreLocatorAction, StoreLocatorListing} from './interfaces.js';\nimport {FeatureSet} from './interfaces.js';\n\n/** Generates listing objects from a Quick Builder configuration. */\nexport function convertLocations(configuration: QuickBuilderConfiguration):\n    StoreLocatorListing[] {\n  function convertAction(action: QuickBuilderAction): StoreLocatorAction {\n    return {label: action.label ?? '', defaultUri: action.defaultUrl};\n  }\n\n  const mapListing: (x: QuickBuilderLocation) => StoreLocatorListing =\n      (location) => ({\n        title: location.title ?? '',\n        addressLines:\n            [location.address1 ?? '', location.address2 ?? ''].filter(Boolean),\n        position: location.coords ?? {lat: 0, lng: 0},\n        placeId: location.placeId,\n        actions: (location.actions ?? []).map(convertAction),\n      });\n\n  return (configuration.locations ?? []).map(mapListing);\n}\n\n/**\n * Maps Quick Builder configuration capabilities to a Store Locator\n * `featureSet`.\n */\nexport function getFeatureSet(configuration: QuickBuilderConfiguration):\n    FeatureSet {\n  if (configuration.capabilities?.directions) {\n    return FeatureSet.ADVANCED;\n  } else if (configuration.capabilities?.input) {\n    return FeatureSet.INTERMEDIATE;\n  } else {\n    return FeatureSet.BASIC;\n  }\n}\n\n/**\n * Sanitizes Quick Builder generated map options.\n */\nexport function getMapOptions(configuration: QuickBuilderConfiguration):\n    Partial<google.maps.MapOptions> {\n  const options = {...(configuration.mapOptions ?? {})};\n  if (!options.mapId) delete options.mapId;\n  return options;\n}"]}