{"version":3,"file":"place_rating.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_rating/place_rating.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {css, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport {when} from 'lit/directives/when.js';\n\nimport {GMPX_RATING_COLOR, GMPX_RATING_COLOR_EMPTY} from '../../base/common_styles.js';\nimport {LocalizationController} from '../../base/localization_controller.js';\nimport type {Place} from '../../utils/googlemaps_types.js';\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\n\n\nconst MIN_RATING = 1;\nconst MAX_RATING = 5;\n\nenum IconType {\n  FULL = 'full',\n  HALF = 'half',\n  EMPTY = 'empty',\n}\n\nfunction toStarIcons(rating: number): IconType[] {\n  let numHalfStars = Math.round(rating * 2);\n  const icons = [];\n  while (numHalfStars > 1) {\n    icons.push(IconType.FULL);\n    numHalfStars -= 2;\n  }\n  if (numHalfStars > 0) {\n    icons.push(IconType.HALF);\n  }\n  while (icons.length < MAX_RATING) {\n    icons.push(IconType.EMPTY);\n  }\n  return icons;\n}\n\n/**\n * Renders a place's star rating in either full (4.9 ★★★★★) or condensed\n * (4.9 ★) form.\n *\n * @cssproperty [--gmpx-rating-color] - Color of the stars in a star\n * rating.\n * @cssproperty [--gmpx-rating-color-empty] - Color of the empty stars\n * in a star rating.\n */\n@customElement('gmpx-place-rating')\nexport class PlaceRating extends PlaceDataConsumer {\n  static override styles = css`\n    .star-icon.full {\n      color: ${GMPX_RATING_COLOR};\n    }\n    .star-icon.empty {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n    }\n    .star-icon.half {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n      position: relative;\n    }\n    .star-icon.half::before {\n      color: ${GMPX_RATING_COLOR};\n      content: '\\\\2605';\n      overflow: hidden;\n      position: absolute;\n      width: 50%;\n    }\n  `;\n\n  /**\n   * Render a condensed star rating (4.9 ★) instead of the full format\n   * (4.9 ★★★★★).\n   */\n  @property({type: Boolean, reflect: true}) condensed = false;\n\n  protected readonly getMsg = LocalizationController.buildLocalizer(this);\n\n  protected override render() {\n    const rating = this.getRating();\n    return when(rating !== null, () => {\n      const icons = this.condensed ? [IconType.FULL] : toStarIcons(rating!);\n      // clang-format off\n      return html`\n        <span role=\"img\" aria-label=${\n            this.getMsg('PLACE_RATING_ARIA_LABEL', rating!.toFixed(1))}>\n          <span aria-hidden=\"true\">\n            <span>${rating!.toFixed(1)}</span>\n            ${map(icons, (iconType) => {\n              return html`<span class=\"star-icon ${iconType}\">&#x2605;</span>`;\n            })}\n          </span>\n        </span>\n      `;\n      // clang-format on\n    });\n  }\n\n  /** @ignore */\n  getRequiredFields(): Array<keyof Place> {\n    return ['rating'];\n  }\n\n  protected override placeHasData(place: Place): boolean {\n    return (place.rating != null);\n  }\n\n  private getRating(): number|null {\n    const rating = this.getPlace()?.rating;\n    if (!rating || rating < MIN_RATING || rating > MAX_RATING) return null;\n    return rating;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gmpx-place-rating': PlaceRating;\n  }\n}\n"]}