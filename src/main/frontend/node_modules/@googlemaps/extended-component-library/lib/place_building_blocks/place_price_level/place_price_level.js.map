{"version":3,"file":"place_price_level.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_price_level/place_price_level.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAC,IAAI,EAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,OAAO,EAAC,mBAAmB,EAAC,MAAM,4BAA4B,CAAC;AAC/D,OAAO,EAAC,iBAAiB,EAAC,MAAM,2BAA2B,CAAC;AAG5D,SAAS,gBAAgB,CAAC,UAAuB,EAAE,MAAc;IAC/D,IAAI,UAAU,IAAI,IAAI,IAAI,UAAU,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IAC3E,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAClD,CAAC;AAED;;GAEG;AAEI,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,iBAAiB;IAA/C;;QACL;;WAEG;QACsC,WAAM,GAAG,GAAG,CAAC;IAoBxD,CAAC;IAlBoB,MAAM;QACvB,OAAO,IAAI,CAAA,SAAS,IAAI,CAAC,oBAAoB,EAAE,SAAS,CAAC;IAC3D,CAAC;IAED,cAAc;IACd,iBAAiB;QACf,OAAO,CAAC,YAAY,CAAC,CAAC;IACxB,CAAC;IAEkB,YAAY,CAAC,KAAY;QAC1C,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpC,CAAC;IAEO,oBAAoB;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,KAAK,EAAE,UAAU,IAAI,IAAI;YAAE,OAAO,EAAE,CAAC;QACzC,OAAO,gBAAgB,CAAC,mBAAmB,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9E,CAAC;CACF,CAAA;AApB0C;IAAxC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;;+CAAc;AAJ3C,eAAe;IAD3B,aAAa,CAAC,wBAAwB,CAAC;GAC3B,eAAe,CAwB3B","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\nimport type {Place} from '../../utils/googlemaps_types.js';\nimport {priceLevelToNumeric} from '../../utils/place_utils.js';\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\n\n\nfunction renderPriceLevel(priceLevel: number|null, symbol: string): string {\n  if (priceLevel == null || priceLevel < 0 || symbol.length === 0) return '';\n  return Array.from(symbol)[0].repeat(priceLevel);\n}\n\n/**\n * Renders a symbolic representation of a place's price level (e.g. $$$).\n */\n@customElement('gmpx-place-price-level')\nexport class PlacePriceLevel extends PlaceDataConsumer {\n  /**\n   * The currency symbol (such as $) to use.\n   */\n  @property({type: String, reflect: true}) symbol = '$';\n\n  protected override render() {\n    return html`<span>${this.getDisplayPriceLevel()}</span>`;\n  }\n\n  /** @ignore */\n  getRequiredFields(): Array<keyof Place> {\n    return ['priceLevel'];\n  }\n\n  protected override placeHasData(place: Place): boolean {\n    return (place.priceLevel != null);\n  }\n\n  private getDisplayPriceLevel(): string {\n    const place = this.getPlace();\n    if (place?.priceLevel == null) return '';\n    return renderPriceLevel(priceLevelToNumeric(place.priceLevel), this.symbol);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gmpx-place-price-level': PlacePriceLevel;\n  }\n}\n"]}