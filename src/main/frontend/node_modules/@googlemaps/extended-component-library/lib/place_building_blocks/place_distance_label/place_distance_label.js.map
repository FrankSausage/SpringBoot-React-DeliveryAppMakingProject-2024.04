{"version":3,"file":"place_distance_label.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_distance_label/place_distance_label.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAC,GAAG,EAAE,IAAI,EAAiB,MAAM,KAAK,CAAC;AAC9C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAEjE,OAAO,EAAC,OAAO,EAAE,iBAAiB,EAAC,MAAM,mCAAmC,CAAC;AAE7E,OAAO,EAAC,YAAY,EAAC,MAAM,4BAA4B,CAAC;AACxD,OAAO,EAAC,iBAAiB,EAAC,MAAM,2BAA2B,CAAC;AAE5D,OAAO,EAAC,oBAAoB,EAAC,MAAM,4BAA4B,CAAC;AAMhE,SAAS,yBAAyB,CAAC,UAA+B;IAChE,QAAQ,UAAU,EAAE;QAClB,KAAK,WAAW;YACd,OAAO,iBAAiB,CAAC;QAC3B,KAAK,SAAS;YACZ,OAAO,mBAAmB,CAAC;QAC7B,KAAK,SAAS;YACZ,OAAO,iBAAiB,CAAC;QAC3B;YACE,OAAO,gBAAgB,CAAC;KAC3B;AACH,CAAC;AAED;;;;;;GAMG;AACH,SAAS,6BAA6B,CAAC,IACS;IAC9C,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IACvB,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,OAAO;QAAE,OAAO,EAAC,OAAO,EAAC,CAAC;IAC9B,IAAI,QAAQ;QAAE,OAAO,EAAC,QAAQ,EAAC,CAAC;IAChC,IAAI,KAAK;QAAE,OAAO,EAAC,KAAK,EAAC,CAAC;IAC1B,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;;;;GAKG;AAEI,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,iBAAiB;IAAlD;;QAqBc,eAAU,GACzB,IAAI,iBAAiB,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;QAEpD,yBAAoB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC/D,6BAAwB,GAAG,KAAK,CAAC;IAkE3C,CAAC;IAhEoB,UAAU,CAAC,iBAAiC;QAC7D,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAEpC,oEAAoE;QACpE,IAAI,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC/B,iBAAiB,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;YACvC,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;IACH,CAAC;IAEkB,oBAAoB,CACnC,KAAkB,EAAE,QAAqB;QAC3C,mEAAmE;QACnE,IAAI,KAAK,EAAE,EAAE,KAAK,QAAQ,EAAE,EAAE,EAAE;YAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;IACH,CAAC;IAEkB,MAAM;QACvB,MAAM,EAAC,QAAQ,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC;QACvD,IAAI,IAAI,CAAC,wBAAwB,IAAI,CAAC,QAAQ;YAAE,OAAO,IAAI,CAAA,EAAE,CAAC;QAE9D,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,EAAE;YAClC,OAAO,IAAI,CAAA,SAAS,QAAQ,CAAC,IAAI,SAAS,CAAC;SAC5C;QAED,OAAO,IAAI,CAAA;;UAEL,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC;;cAEtC,QAAQ,CAAC,IAAI;KACtB,CAAC;IACJ,CAAC;IAED,cAAc;IACd,iBAAiB;QACf,OAAO,EAAE,CAAC,CAAE,yDAAyD;IACvE,CAAC;IAEkB,YAAY;QAC7B,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC;IACrC,CAAC;IAEO,KAAK,CAAC,oBAAoB;QAChC,IAAI,IAAI,CAAC,wBAAwB;YAAE,OAAO;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,MAAM,GAAG,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,MAAM,WAAW,GAAG,6BAA6B,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,MAAM,IAAI,WAAW,EAAE;YACzB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;YACrC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;gBACnD,MAAM;gBACN,WAAW;gBACX,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,SAAS,CAAe;aACxE,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACjD,gEAAgE;YAChE,gEAAgE;YAChE,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;SACjC;QACD,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;IACxC,CAAC;;AAzFe,yBAAM,GAAG,GAAG,CAAA;;;;;;GAM3B,AANqB,CAMpB;AAOF;IADC,QAAQ,CAAC,EAAC,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC;;sDACjC;AAGH;IAA7B,QAAQ,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;;kDAAqC;AAEjD;IAAhB,KAAK,EAAE;;0DAAoD;AAnBjD,kBAAkB;IAD9B,aAAa,CAAC,oCAAoC,CAAC;GACvC,kBAAkB,CA2F9B","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {css, html, PropertyValues} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n\nimport {WebFont, WebFontController} from '../../base/web_font_controller.js';\nimport type {LatLng, LatLngLiteral, Place} from '../../utils/googlemaps_types.js';\nimport {makeWaypoint} from '../../utils/place_utils.js';\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\n\nimport {DirectionsController} from './directions_controller.js';\n\n\ntype TravelMode = google.maps.TravelMode;\ntype TravelModeAttribute = Lowercase<TravelMode>;\n\nfunction getIconNameFromTravelMode(travelMode: TravelModeAttribute): string {\n  switch (travelMode) {\n    case 'bicycling':\n      return 'directions_bike';\n    case 'transit':\n      return 'directions_subway';\n    case 'walking':\n      return 'directions_walk';\n    default:\n      return 'directions_car';\n  }\n}\n\n/**\n * Converts data into a format suitable for specifying a place in the\n * `DirectionsRequest`.\n *\n * @return A `google.maps.Place` object that is identified by exactly one of\n *     Place ID, location, or query, with preference in that order.\n */\nfunction makePlaceForDirectionsRequest(data: LatLng|LatLngLiteral|Place|null|\n                                       undefined): google.maps.Place|null {\n  if (!data) return null;\n  const {placeId, location, query} = makeWaypoint(data);\n  if (placeId) return {placeId};\n  if (location) return {location};\n  if (query) return {query};\n  return null;\n}\n\n/**\n * Component that displays as text the distance to this place from an origin,\n * or the duration if a travel mode is also specified.\n *\n * @package Intended for template usage in the Place Overview component only.\n */\n@customElement('gmpx-place-distance-label-internal')\nexport class PlaceDistanceLabel extends PlaceDataConsumer {\n  static override styles = css`\n    .icon {\n      font-size: inherit;\n      line-height: inherit;\n      vertical-align: bottom;\n    }\n  `;\n\n  /**\n   * Travel mode to be used when computing transit time from `origin`.\n   * If undefined (default), this component will render the distance instead.\n   */\n  @property({attribute: 'travel-mode', reflect: true, type: String})\n  travelMode?: TravelModeAttribute;\n\n  /** Starting location or Place. */\n  @property({attribute: false}) origin?: LatLng|LatLngLiteral|Place;\n\n  @state() private directionsData?: google.maps.DirectionsLeg;\n\n  protected readonly fontLoader =\n      new WebFontController(this, [WebFont.MATERIAL_SYMBOLS_OUTLINED]);\n\n  private readonly directionsController = new DirectionsController(this);\n  private isFetchingDirectionsData = false;\n\n  protected override willUpdate(changedProperties: PropertyValues) {\n    super.willUpdate(changedProperties);\n\n    // Re-fetch directions data if either origin or travel mode changes.\n    if (changedProperties.has('origin') ||\n        changedProperties.has('travelMode')) {\n      this.updateDirectionsData();\n    }\n  }\n\n  protected override placeChangedCallback(\n      value?: Place|null, oldValue?: Place|null) {\n    // Re-fetch directions data if Place ID of the destination changes.\n    if (value?.id !== oldValue?.id) {\n      this.updateDirectionsData();\n    }\n  }\n\n  protected override render() {\n    const {distance, duration} = this.directionsData ?? {};\n    if (this.isFetchingDirectionsData || !distance) return html``;\n\n    if (!(this.travelMode && duration)) {\n      return html`<span>${distance.text}</span>`;\n    }\n\n    return html`\n      <span class=\"icon material-symbols-outlined\">\n        ${getIconNameFromTravelMode(this.travelMode)}\n      </span>\n      <span>${duration.text}</span>\n    `;\n  }\n\n  /** @ignore */\n  getRequiredFields(): Array<keyof Place> {\n    return [];  // Place ID alone is sufficient for a Directions request.\n  }\n\n  protected override placeHasData(): boolean {\n    return this.directionsData != null;\n  }\n\n  private async updateDirectionsData() {\n    if (this.isFetchingDirectionsData) return;\n    const place = this.getPlace();\n    const origin = makePlaceForDirectionsRequest(this.origin);\n    const destination = makePlaceForDirectionsRequest(place);\n    if (origin && destination) {\n      this.isFetchingDirectionsData = true;\n      const result = await this.directionsController.route({\n        origin,\n        destination,\n        travelMode: (this.travelMode?.toUpperCase() ?? 'DRIVING') as TravelMode,\n      });\n      this.directionsData = result?.routes[0]?.legs[0];\n      // When switching the travel mode between driving and undefined,\n      // this.directionsData is unchanged but we still want an update.\n      this.requestUpdate();\n    } else {\n      this.directionsData = undefined;\n    }\n    this.isFetchingDirectionsData = false;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gmpx-place-distance-label-internal': PlaceDistanceLabel;\n  }\n}\n"]}