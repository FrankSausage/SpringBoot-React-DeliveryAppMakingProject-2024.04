{"version":3,"file":"poll.js","sourceRoot":"","sources":["../../src/utils/poll.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH;;;GAGG;AACH,MAAM,OAAO,IAAI;IAGf;;;OAGG;IACH,KAAK,CAAC,QAAkB,EAAE,QAAgB;QACxC,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACzC,CAAC;IAED,gDAAgD;IAChD,IAAI;QACF,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC5B;IACH,CAAC;IAEO,aAAa,CAAC,QAAkB,EAAE,QAAgB;QACxD,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;YAC/B,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACf,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Utility class that allows callers to start or stop continuous polling of a\n * callback function at set intervals (without calling `setInterval` itself).\n */\nexport class Poll {\n  private timeoutId?: number;\n\n  /**\n   * Starts continuous polling of the specified callback function after every\n   * interval (in ms).\n   */\n  start(callback: Function, interval: number) {\n    this.stop();\n    this.updateTimeout(callback, interval);\n  }\n\n  /** Stops the currently running poll, if any. */\n  stop() {\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = undefined;\n    }\n  }\n\n  private updateTimeout(callback: Function, interval: number) {\n    this.timeoutId = setTimeout(() => {\n      callback();\n      this.updateTimeout(callback, interval);\n    }, interval);\n  }\n}\n"]}